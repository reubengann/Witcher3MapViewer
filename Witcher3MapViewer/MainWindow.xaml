<Window x:Class="Witcher3MapViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Witcher3MapViewer"
        xmlns:wpf1="clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf"        
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800"
        Name="TheMainWindow" Closing="TheMainWindow_Closing"
        >
    <Window.InputBindings>
        <KeyBinding Command="Find" Key="F" Modifiers="Ctrl"/>
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="TextBlock">
                <!--<Setter Property="Background" Value="Black"/>-->
                <Setter Property="Foreground" Value="White"/>
            </Style>
            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="True"/>
            </Style>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <!-- http://stackoverflow.com/questions/16736712/treeview-with-more-than-one-column -->

            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="0,5,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                                <Path x:Name="ExpandPath" Fill="White" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="White"/>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
                <Setter Property="local:TreeViewItemBehavior.IsBroughtIntoViewWhenSelected" Value="True"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate" ItemsSource="{Binding Children}">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,5" IsEnabled="True">
                    <CheckBox Focusable="False" IsChecked="{Binding IsChecked}" VerticalAlignment="Center"
                              Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
                    <Image Source="{Binding SmallIconPath}" MinWidth="40" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="0"/>
                        </Image.Effect>
                    </Image>
                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                </StackPanel>
            </HierarchicalDataTemplate>
            <local:RowColorConvertor x:Key="rowColorConvertor"/>
            <HierarchicalDataTemplate x:Key="CheckBoxItemTemplateClickable" ItemsSource="{Binding Children, Mode=OneTime}">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition SharedSizeGroup="LevelCol" Width="25"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" Focusable="False" IsChecked="{Binding IsChecked}" VerticalAlignment="Top" 
                              Checked="CheckBox_Checked_1" Unchecked="CheckBox_Checked_1" Margin="5"/>
                    <TextBlock Grid.Column="1" Text ="{Binding Name, Mode=OneWay}" TextWrapping="Wrap" Margin="5" VerticalAlignment="Top"/>
                    <TextBlock Grid.Column="2" Text="{Binding SuggestedLevel}" Margin="5" VerticalAlignment="Top">
                        <TextBlock.Foreground>
                            <MultiBinding Converter="{StaticResource rowColorConvertor}">
                                <Binding Path="SuggestedLevel"/>
                                <Binding Path="PlayerLevel" ElementName="TheMainWindow"/>
                            </MultiBinding>
                        </TextBlock.Foreground>
                    </TextBlock>

                </Grid>

            </HierarchicalDataTemplate>
            <Style x:Key="FadeOutButton" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Control.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation Duration="0:0:0.5" To="1" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Control.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation Duration="0:0:0.5" To="0.3" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <wpf1:MapControl Name="MyMapControl" MouseMove="MyMapControl_MouseMove">
            <wpf1:MapControl.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextAlignment" Value="Center"/>
                    <!--<Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="MaxWidth" Value="80"/>-->
                </Style>
            </wpf1:MapControl.Resources>
        </wpf1:MapControl>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="34*"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="333*"/>
                <RowDefinition Height="34*"/>
                <RowDefinition Height="33"/>
                <RowDefinition Height="3"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="299*"/>
                <ColumnDefinition Width="124"/>
            </Grid.ColumnDefinitions>

            <Border BorderBrush="Black" Grid.Column="1" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Top" Height="32" Margin="77,0" Width="145">
                <Grid Background="Red" HorizontalAlignment="Left" Height="30" Margin="0,0,0,0" VerticalAlignment="Top" Width="143">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="25"/>
                        <ColumnDefinition Width="25"/>
                    </Grid.ColumnDefinitions>
                    <TextBox FontSize="18" Background="Red" Foreground="White">Level</TextBox>
                    <TextBox x:Name="Level_textbox" VerticalAlignment="Center" HorizontalAlignment="Right" Background="Red" Foreground="White" Height="25" TextChanged="Level_textbox_TextChanged" FontSize="18" BorderThickness="0,0,0,0">1</TextBox>
                    <Grid Grid.Column="1">
                        <RepeatButton x:Name="PART_DecreaseButton" Grid.Row="0" Width="20" Height="20" Margin="0, 1, 1, 0" Background="#FF69ADFF" Click="PART_DecreaseButton_Click">
                            <Path Width="1.5" Data="M 0 0 L 1 0 Z" Stroke="White" Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <Grid Grid.Column="2">
                        <RepeatButton x:Name="PART_IncreaseButton" Grid.Row="0" Width="20" Height="20" Margin="0, 1, 1, 0" Background="#FF69ADFF" Click="PART_IncreaseButton_Click">
                            <Path Data="M-10,0 L0,0 M -5,-5 -5,5" Height="10" Stretch="Uniform" Stroke="White" Width="10"/>
                        </RepeatButton>
                    </Grid>
                </Grid>
            </Border>
            <Border Grid.Row="0" Grid.Column="2"  Background="Transparent">
                <Image x:Name="SettingsButton" HorizontalAlignment="Right" Source="Resources/FEZ-04-512.png" Style="{StaticResource FadeOutButton}"
                   Opacity="0.3" MouseDown="SettingsButton_MouseDown"  />
            </Border>
            <Button x:Name="GwentOpenButton" Grid.Row="1" Grid.Column="0" Content="{Binding GwentStatusText}" Click="GwentOpenButton_Click" />
            <Border Grid.Column="0" Grid.Row="2" Grid.RowSpan="4" VerticalAlignment="Stretch" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="Auto" Margin="0,0,0,0" Width="250">
                <TreeView x:Name="questTree"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch"
                          Background="Black"
                          ItemContainerStyle="{StaticResource TreeViewItemStyle1}"
                          ItemsSource="{Binding CurrentQuests}"
                          ItemTemplate="{StaticResource CheckBoxItemTemplateClickable}" SelectedItemChanged="questTree_SelectedItemChanged"                          
                          >
                    <TreeView.Resources>
                        <ContextMenu x:Key="Undeferred">
                            <MenuItem Header="Defer" Click="DeferItem_Click"/>
                        </ContextMenu>
                        <ContextMenu x:Key="Deferred">
                            <MenuItem Header="Undefer" Click="DeferItem_Click"/>
                        </ContextMenu>
                    </TreeView.Resources>
                </TreeView>
            </Border>
            <Border Grid.Row="3" Grid.Column="2" BorderBrush="Black" Background="Black" BorderThickness="1" HorizontalAlignment="Center" Margin="7,3,7,5" VerticalAlignment="Center" CornerRadius="5" Height="26" Width="110">
                <TextBlock x:Name="HoverPositionXY" Text="" TextAlignment="Center" Width="109" FontSize="18" Foreground="White"/>
            </Border>
            <Border x:Name="InfoBoxHolder" Visibility="{Binding InfoShown, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    BorderBrush="Black" Grid.Row="3" Grid.Column="1" Grid.RowSpan="2" BorderThickness="1" HorizontalAlignment="Center" Margin="5,3,5,0" VerticalAlignment="Bottom" CornerRadius="5" Background="Black">
                <TextBlock x:Name="InfoBox" Text="{Binding InfoMessage}" Margin="2,2,2,2" TextAlignment="Center" FontSize="18" Foreground="White" TextWrapping="Wrap"/>
            </Border>
            <ComboBox Grid.Row="4" Grid.Column="2" x:Name="comboBox" 
                      HorizontalAlignment="Center" VerticalAlignment="Center" Width="114" Height="26" 
                      Loaded="comboBox_Loaded"                      
                      ItemsSource="{Binding WorldSelectList}"
                      SelectedIndex="{Binding WorldSelectIndex}" Margin="5,3,5,4">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </Grid>
        <Expander Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0">
            <Expander.Header>
                <Border>
                    <TextBlock Foreground="White" Background="Transparent" Text="Toggle markers"/>
                </Border>
            </Expander.Header>
            <TreeView x:Name="itemChooser"
                      Margin="10,10,0,10"
                      HorizontalAlignment="Left"
                      ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                      ItemsSource="{Binding Markers}"
                      ItemTemplate="{StaticResource CheckBoxItemTemplate}" Padding="1,1,10,1"
                      />
        </Expander>
        <local:SearchBox2 x:Name="SearchBox" Value="{Binding SearchQuery, Mode=TwoWay}" 
                          Visibility="{Binding SearchShown, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Focusable="True"/>
    </Grid>
</Window>
